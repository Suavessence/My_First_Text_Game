#include <vector>
#include <iostream>

int main()
{
    int floor1_size = 3;
    int floor2_size = 5;
    int floor3_size = 7;
    int floor4_size = 2;
    int floor5_size = 1;
    int floor6_size = 8;
    
    //create the 2D vectors...aka, the floors//////////////////////////////////
    
    std::vector<std::vector<int> > floor1;
    
    for(int i = 0; i < floor1_size; i++)
    {
        std::vector<int> temp;
        for(int j = 0; j < floor1_size; j++)
        {
            temp.push_back(i);
        }
        floor1.push_back(temp);
    }
    
    std::vector<std::vector<int> > floor2;
    
    for(int i = 0; i < floor2_size; i++)
    {
        std::vector<int> temp;
        for(int j = 0; j < floor2_size; j++)
        {
            temp.push_back(i);
        }
        floor2.push_back(temp);
    }
    
    std::vector<std::vector<int> > floor3;
    
    for(int i = 0; i < floor3_size; i++)
    {
        std::vector<int> temp;
        for(int j = 0; j < floor3_size; j++)
        {
            temp.push_back(i);
        }
        floor3.push_back(temp);
    }
    
    std::vector<std::vector<int> > floor4;
    
    for(int i = 0; i < floor4_size; i++)
    {
        std::vector<int> temp;
        for(int j = 0; j < floor4_size; j++)
        {
            temp.push_back(i);
        }
        floor4.push_back(temp);
    }
    
    std::vector<std::vector<int> > floor5;
    
    for(int i = 0; i < floor5_size; i++)
    {
        std::vector<int> temp;
        for(int j = 0; j < floor5_size; j++)
        {
            temp.push_back(i);
        }
        floor5.push_back(temp);
    }
    
    std::vector<std::vector<int> > floor6;
    for(int i = 0; i < floor6_size; i++)
    {
        std::vector<int> temp;
        for(int j = 0; j < floor6_size; j++)
        {
            temp.push_back(i);
        }
        floor6.push_back(temp);
    }
    
    //create the 3D vector...aka, the entire dungeon, filled with floors//////////////////////////////////
    
    std::vector<std::vector<std::vector<int> > > dungeon;
    dungeon.push_back(floor1);
    dungeon.push_back(floor2);
    dungeon.push_back(floor3);
    dungeon.push_back(floor4);
    dungeon.push_back(floor5);
    dungeon.push_back(floor6);
    
    //iterate through the entire dungeon////////////////////////////////////////////////////////////////////
    
    for(int d = 0; d < dungeon.size(); d++)
    {
        if(d == 0)
        {
            std::cout << "Floor 1 | " << floor1_size << std::endl;
            for (int i = 0; i < floor1.size(); i++)
            {
                for(int j = 0; j < floor1[i].size(); j++)
                {
                    std::cout << floor1[i][j];
                }
                std::cout << std::endl;
            }
        }
        else if (d == 1)
        {
            std::cout << "Floor 2 | " << floor2_size << std::endl;
            for (int i = 0; i < floor2.size(); i++)
            {
                for(int j = 0; j < floor2[i].size(); j++)
                {
                    std::cout << floor2[i][j];
                }
                std::cout << std::endl;
            }
        }
        else if (d == 2)
        {
            std::cout << "Floor 3 | " << floor3_size << std::endl;
            for (int i = 0; i < floor3_size; i++)
            {
                for(int j = 0; j < floor3[i].size(); j++)
                {
                    std::cout << floor3[i][j];
                }
                std::cout << std::endl;
            }
        }
        else if (d == 3)
        {
            std::cout << "Floor 4 | " << floor4_size << std::endl;
            for (int i = 0; i < floor4.size(); i++)
            {
                for(int j = 0; j < floor4[i].size(); j++)
                {
                    std::cout << floor4[i][j];
                }
                std::cout << std::endl;
            }
        }
        else if (d == 4)
        {
            std::cout << "Floor 5 | " << floor5_size << std::endl;
            for (int i = 0; i < floor5.size(); i++)
            {
                for(int j = 0; j < floor5[i].size(); j++)
                {
                    std::cout << floor5[i][j];
                }
                std::cout << std::endl;
            }
        }
        else if (d == 5)
        {
            std::cout << "Floor 6 | " << floor6_size << std::endl;
            for (int i = 0; i < floor6.size(); i++)
            {
                for(int j = 0; j < floor6[i].size(); j++)
                {
                    std::cout << floor6[i][j];
                }
                std::cout << std::endl;
            }
        }
        std::cout << std::endl;
    }

    return 0;
}

