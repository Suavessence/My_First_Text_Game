#include <iostream>
#include <random> //for rng

//global RNG stuff/////////////////////////////////////////
std::random_device dev;
std::mt19937 rng(dev());
//  std::uniform_int_distribution<std::mt19937::result_type> dist6(first_possible_monster, last_possible_monster); 
//  distribution in range [0, 3] use: dist6(rng)
//  int test = dist6(rng);


//classes//////////////////////////////////////////////////
class Entities
{
    private:
        
    public:
        
};
class Players : public Entities
{
    private:
        
    public:
        
};
class Monsters : public Entities
{
    private:
        
    public:
        
};
class Objects
{
    private:
        
    public:
        
};
class Weapons : public Objects
{
    private:
        
    public:
        
};
class Consumables : public Objects
{
    private:
        
    public:
        
};
class Locations
{
    private:
        
    public:
        
};
class Arts
{
    private:
        
    public:
        
};
class Texts
{
    private:
        
    public:
        
};

//main//////////////////////////////////////////////////////
int main()
{
    

    return 0;
}

//definitions///////////////////////////////////////////////
